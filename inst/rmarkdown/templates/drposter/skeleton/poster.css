/* Download fonts. @import must come before any rules in the document */
@import url(https://fonts.googleapis.com/css?family=Roboto:400,700|Monda:400,700);


/* Page setup */
/* reveal.js:536 sets it as @page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0;} */
@page {
	size: 841mm 1189mm;  /* A0 paper for now */
	margin: 0;
}

html {
	margin: 0;
	width: 841mm;
	height: 1189mm;
}

@media screen {
	html {
		zoom: 0.33;
		margin: auto;
	}
}

body {
	margin: 0;
	height: inherit;
	-webkit-print-color-adjust: exact;  /* Enable background printing in Chrome: http://stackoverflow.com/questions/3893986/css-media-print-issues-with-background-color */
}


/* Font-sizes.  These could also be set proportionally to the base html size */
html {
	font-family: 'Roboto', sans-serif;
	font-size: 1cm;
	line-height: 1.375; /* Use proportional line spacing so everything is self-consistent */
	/* Also set up the background.  Eventually this will be a separate color/gradient section */
	background-color: #395831;
	background: url("Resources/rotated-circuit-board.svg");
	background-repeat: no-repeat;
	/* Override circuit board style with a gradient */
	background-size: cover;
	background: white;
	background: linear-gradient(to bottom, #eee9ee, white);  /* Make the poster more cheery than plain gray by incorporating a hint of the purple font color */
	/* Can set overall document "margins" here */
	padding: 1.5cm;
	/* See also https://css-tricks.com/html-vs-body-in-css/ meaning that rem is set relative to the html root font size */
}

h1, h2:not(.author) {
	font-family: 'Monda', sans-serif;
}

h1, h2 {
	font-size: 1.5cm;
}

.author {
	font-size: 1.4cm;
	font-weight: normal;
}

.title {
	font-size: 2.5cm;
	line-height: 1.15;
	margin-bottom: 0;
	color: #400040;
}

caption {
	font-size: 0.6em;
	font-size: inherit;
}


/* Poster title/header */
.reveal .slides > section:first-child {
	grid-column: span 12;  /* full width of the poster */
	text-align: center;
	/*background: lightgray;
	background: linear-gradient(to right, lightgray, white);
	background: linear-gradient(to bottom, lightgray, white);*/
	/*opacity: 0.9;*/ /* but also assigns the alpha to content */
	width: 100%;
	box-sizing: border-box;
	padding: 0 1%;
	/* box-shadow: 0 10px black; */ /* NEW: consider merging with the rest of the poster more elegantly like this */
}

.reveal .slides > section:first-child ol.affiliations {
	font-size: 0.75em;
	margin-top: 0.5em;
	list-style-type: none;
	counter-reset: institution-counter;
}

.reveal .slides > section:first-child ol.affiliations li:before {
	content: counter(institution-counter);  /* Comment out this line if there is only one institution */
	counter-increment: institution-counter;
	/* Superscripting copied from .cite at bottom */
	vertical-align: baseline;
	position: relative;
	top: -0.4em;
	right: -0.25em;
	font-size: 0.8em;
}

.reveal .slides > section:first-child ol.affiliations li:after {
	/* Get glyph information from https://css-tricks.com/snippets/html/glyphs/ */
	content: "\2022";
	padding: 0 0.3em 0 0.5em;  /* Not sure why the li formatting is inconsistent */
}

.reveal .slides > section:first-child ol.affiliations li:nth-child(3n+3):after, .reveal .slides > section:first-child ol.affiliations li:last-child:after {
	content: none;
	padding: 0;
} /* I had six affiliations in my original poster.  Added the last-child rule for the demo */


.reveal .slides > section:first-child ol.affiliations li {
	display: inline-block;
}

.presenter {
	font-weight: bold;
}

.warning {
	color: red;
}

/* Set up slide layout */
.reveal .slides .titleslide {
	display: none;
}

.reveal .slides {
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	grid-column-gap: 0.5in;  /* gap between columns */
	/* TODO: Consider applying the grid equivalent of spacing-between to rows */
	/* Let's set up the grid to be similar to bootstrap, where there are 12 equal columns which are combined via .col-x classes, e.g. .col-6 for half of the width */
	/* See https://css-tricks.com/things-ive-learned-css-grid-layout/ and https://hacks.mozilla.org/2017/04/replace-bootstrap-layouts-with-css-grid/ for inspiration */
	/* See also https://css-tricks.com/snippets/css/complete-guide-grid/ and https://gridbyexample.com/examples/ for general help */
}

.reveal {
	/* Should probably check how reveal.js handles the div's autoshrinking.  Maybe just set the smallest one? */
	height: inherit;
}

.reveal .slides > .section:not(:first-child) {
	display: flex;
	/*flex-flow: row wrap;*/
	flex-flow: column; /* TODO: figure out how to change this back for automatically filling .by-row-X, with similar notation as the columns */
	justify-content: space-between;
	flex: 1 1 auto;
	/* TODO: reimport padding? */
	/*padding: 0 1cm;*/  /* Simply adjust left-right document margins for the main content */
	/* FIXME: temporary since the .col-1 h1 classes are failing (not setting the parent section, but rather the child).  I should figure out if there's an alternative that reaches the parent grid.  Maybe subgrid?  Another keyword or flexbox thing I'm missing? */
/*	grid-column: span 4;*/  /* This was used in my old layout to get the 3-column setting, but it overrides all of the actual column specs */
}

.reveal .slides .level2 h2 {
	width: 100%;
	height: 2em;
	line-height: calc(2em - 1cm); /* Subtract off padding from border-box */
	vertical-align: middle;
	color: white;
	background: linear-gradient(to left, #800080, #400040);
	border-radius: 1cm;
	padding: 0.5cm 1cm;
	box-sizing: border-box;
	margin: -1em auto 0 auto;
}

.reveal .slides .level2 { 
	border-radius: 1cm;
	padding: 0 1cm;
	box-sizing: border-box;
	margin: 0.75cm;  /* This is actually what controls the spacing between ontent.  By default, the flex 1 1 auto is actually stretching everything to the max, but it still looks nice.*/
	margin-top: 2cm;
	/* Chrome is not handling the background opacity correctly when printing: https://bugs.chromium.org/p/chromium/issues/detail?id=226137 */
	/* background-color: rgba(255, 255, 255, 0.9); */
	/* background-color: rgb(224, 222, 222); */ /* NEW: consider if we want to blend with background */
	border: 0.2cm solid #400040;
	/* box-shadow: 5px 5px 5px black; */ /* NEW: remove for clarity? */
	display: flex;
	flex-flow: row wrap;
	justify-content: space-between;  /* space between columns */
	align-content: flex-start;
}

.reveal .slides .level2:only-of-type {
	/* If there is only one block, stretch it, because there are no adjacent elements for space-between */
	flex-grow: 1;
}

.level1 h1 {
	/* Pseudo elements for pandoc div's */
	display: none;
}

p, pre {
	flex: 45%;
	padding: 0 0.3em;
	box-sizing: border-box;
}

h3 {
	flex: 100%;
	font-family: 'Monda', sans-serif;
	color: #400040;
	font-size: 1.3em;
	margin: 0; /* FIXME */
	/* automatic margins were too large, and margins from p, etc., take care of it nicely.  This results because flexbox does not collapse margins, unlike block-level formatting  */
}

pre {
	min-width: 0;  /* Fixes a flexbox incompatibility for pre, per recommendation from http://stackoverflow.com/questions/32035406/how-to-limit-pre-tag-width-inside-flex-container */
	font-size: 60%; /* This will likely need to be adjusted */
}

/* FIXME: these .col-x classes don't work yet.  The current poster is handled via the rule for .reveal .slides > section:not(:first-child) */
/* Need to do some cleanup to ensure we know exactly what is controlling what, in the new design */
.reveal .slides .col-1 {
	grid-column: span 12;
	/*width: 98%;*/
}

.reveal .slides .col-2 {
	grid-column: span 6;
	/*width: 48%;*/
	/* Long-term: should make the intercolumn spacing customizable, too, maybe with CSS variables? */
	/* Might also consider doing this with flex:1, or similar code, to allow uneven rows, etc. */
}

.reveal .slides .col-3 {
	grid-column: span 4;
	/*width: 31%;*/
}

.reveal .slides .col-4 {
	grid-column: span 3;
}

img {
	width: 100%;  /* Make it fit inside the 2-column, etc, flexbox */
	height: auto;
	background-color: white;  /* Eliminate transparency for consistency among all images */
	border: 0.1cm solid black;  /* Address the lack of transparency with borders */
}


/* special QR code handling */
[alt="QR code"] {
	width: 5cm;
	float: left;
	margin-right: 1.5cm;
	border: none;
}

.qr {
	box-sizing: border-box;
	flex: 0 0 92%;
	margin: auto auto 0 auto; /* Offset for emphasis */
}


/* General formatting */
a {
	text-decoration: none;
	color: inherit;
	font-family: monospace;
}

a::before {
	content: "<"
}

a::after {
	content: ">"
}

/* Adapted from Chris Coyier: https://css-tricks.com/snippets/css/prevent-superscripts-and-subscripts-from-affecting-line-height/ */
sup, sub, .cite {
	vertical-align: baseline;
	position: relative;
	top: -0.4em;
	font-size: 0.8em;
}
sub { 
  top: 0.4em; 
}

.references p {
	margin: 0;
}

.references {
	margin: 1em 0;
	font-size: 0.8em;
}
